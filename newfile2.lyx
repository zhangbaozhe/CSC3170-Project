#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass IEEEtran
\begin_preamble
% for subfigures/subtables
\usepackage[caption=false,font=footnotesize]{subfig}
\end_preamble
\options journal
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\float_placement tbh
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Your Title"
\pdf_author "Your Name"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle false
\pdf_quoted_options "pdfpagelayout=OneColumn, pdfnewwindow=true, pdfstartview=XYZ, plainpages=false"
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Course Comment and Evaluation Database System
\end_layout

\begin_layout Author
Baozhe Zhang
\begin_inset Foot
status open

\begin_layout Plain Layout
119010421@link.cuhk.edu.cn, School of Science and Engineering, The Chinese
 University of Hong Kong, Shenzhen
\end_layout

\end_inset

, Yuyang Liang
\begin_inset Foot
status open

\begin_layout Plain Layout
119010174@link.cuhk.edu.cn, School of Science and Engineering, The Chinese
 University of Hong Kong, Shenzhen
\end_layout

\end_inset

, Junxiao Liu
\begin_inset Foot
status open

\begin_layout Plain Layout
120090809@link.cuhk.edu.cn, School of Science and Engineering, The Chinese
 University of Hong Kong, Shenzhen
\end_layout

\end_inset

, Yongqi Yu
\begin_inset Foot
status open

\begin_layout Plain Layout
120090761@link.cuhk.edu.cn, School of Science and Engineering, The Chinese
 University of Hong Kong, Shenzhen
\end_layout

\end_inset


\end_layout

\begin_layout Page headings
\begin_inset Argument 1
status open

\begin_layout Plain Layout
CSC3170 Report
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
This is the abstract text.
\end_layout

\begin_layout Keywords
university courses, comment and evaluation systems, database management
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Motivation
\end_layout

\begin_layout Standard
\begin_inset Flex Paragraph Start
status open

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
C
\end_layout

\end_inset

ourse
\end_layout

\end_inset

 selection is very important for college students' learning in CUHKSZ.
 How to choose satisfactory courses troubles many students.
 It is common for college students more interested in some popular courses,
 but not in certain courses.
 However, selecting courses purely based on interest sometimes results in
 poor results.
 Other students' evaluations of course contents, lecturers, assignments,
 and other factors have gradually become the focus of students' course selection.
 At present, students cannot obtain this information from a standard platform.
 Even though the school provides OCTE system to obtain the feedback from
 students, the data collected is all closed and students have no access
 to it.
 There is a growing need for a more efficient course review system for college
 students.
\end_layout

\begin_layout Subsection
Project Overview
\end_layout

\begin_layout Standard
To ease the process of college students selecting courses and provide references
 to previous comments or feedbacks of courses offered, we propose a design
 of Course Comment System for students in our university CUHKSZ.
 Aspired by some review websites like Doupan and Dianping, our design is
 an open plateform for students to freely obtain or post cousrse commets.
 In our design, users can signup, login, serach for courses and comments,
 comment on a course, and reply to or like/dislike a comment.
 Compared woth OCTE system, our design's target users are the college students
 in CUHKSZ, so all commet data is open to users.
 Besides, we implement user anonymity to allow users to share their ideas
 more freely.
 To ensure the validity and reliability of the comments posted, we introduce
 multi-comment system and like/dislike system, the users can show thier
 agreeement or disagreeement with others by send multi-comment (reply) to
 other comments or like/dislake other comments.
 We also implement a recommendation algorithm based on data mining to provied
 users personalized course comment recommendation service.
 
\end_layout

\begin_layout Subsection
Need & Requirement
\end_layout

\begin_layout Standard
We analyze the needs and requirements of our design, and our conclusion
 is shown below:
\end_layout

\begin_layout Subsubsection
User Permissions
\end_layout

\begin_layout Standard
In our design, every user has access to all course comments stored in our
 database.
 However, to comment on a certain course, the user must have registered
 and loged in.
 Likewise, to reply to a comment or like/dislike a comment also requires
 user to log in first.
 Besides, the admin user has the privilege to delete users, courses, and
 comments, or add new courses to the database.
 
\end_layout

\begin_layout Subsubsection
Comment Limitations
\end_layout

\begin_layout Standard
To provide a more accurate evaluation on courses, except the content of
 a comment, we allow user to include the year, semester, instrutor info,
 and a score (from 1 to 5) in a comment.
 However, if some users have no time to include all information in his/her
 comment, we allow user to only submit the score he/she wants to give to
 the course.
 
\end_layout

\begin_layout Subsubsection
Like/Dislike Comments
\end_layout

\begin_layout Standard
The like/dislike system is uesed to evaluate the qulity of a certain comment.
 In this case, a user can only like or dislike a comment at one time.
 
\end_layout

\begin_layout Section
Database System Design
\end_layout

\begin_layout Subsection
subsection
\end_layout

\begin_layout Subsection
another subsection
\end_layout

\begin_layout Section
Database System Implementation
\end_layout

\begin_layout Standard
To avoid environment confilicts during the development of the system among
 team members, we use a Docker container to hold our project and run the
 code on it.
 Docker container is a hypervised 
\begin_inset Quotes eld
\end_inset

virtual-machine-like
\begin_inset Quotes erd
\end_inset

 (but it is not a virtual machine) environment.
 It is 
\begin_inset Quotes eld
\end_inset

a standard unit of software that packages up code and all its dependencies
 so the application runs quickly and reliably from one computing environment
 to another
\begin_inset Quotes erd
\end_inset

.
\begin_inset CommandInset citation
LatexCommand cite
key "Docker"
literal "false"

\end_inset

 The source code of the whole project can be found at Gitee
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://gitee.com/zhang_baozhe/CSC3170-Project
\end_layout

\end_inset


\end_layout

\end_inset

, where we have full documented readme file for you to launch the project.
 Besides, we have deployed the project demo on a Tencent cloud server which
 has a configuration of one core CPU, 2GB of memory, and 40GB of storage.
 Users can access this website
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://175.178.163.91:8080/login
\end_layout

\end_inset


\end_layout

\end_inset

 to test the database demo.
 In this project, we mainly utilize Vue.js, Django, and SQLite for the GUI
 frontend display, the intermediate library with the database, and the database
 engine, respectively.
 Below shows a figure about the system architecture of our project: 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/io.pdf
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Course Comment and Evaluation Database System Architecture
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Implementation Overview
\end_layout

\begin_layout Standard
We use SQLite as the backend database engine for this project.
 SQLite is different from other traditional database engines.
 It 
\begin_inset Quotes eld
\end_inset

does not have a separate server process.
 SQLite reads and writes directly to ordinary disk files.
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "SQLite"
literal "false"

\end_inset

 As discussed in previous sections, after the relational schemas of different
 entities are generated, we use these schema to write SQL code to generate
 corresponding tables in the database.
 The source code constructing the table can be found in Appendix A.
 We first construct the table to generate the SQLite database file, and
 then we put the database file into our project workspace to fill it with
 data.
 SQLite3 is a Python module to handle the interfaces between Python code
 and the SQLite database binary file, which enables us to write Python code
 to handle more difficult data processing.
 On a higher level, we use Django, a Python library to quickly develop web
 pages, to handle the data update or transimission between the database
 and the user interface.
 
\end_layout

\begin_layout Standard
As stated in last section, we use Django as the intermidiate level between
 the user interface and the lower level database engine.
 In this project, we do not use the database abstraction provided by Django
 which is the so-called Object-Relational Mapping (ORM) which allows the
 user to write simple object-oriented code quickly developing a database
 application.
 In stead, we use more customized 
\begin_inset Quotes eld
\end_inset

raw
\begin_inset Quotes erd
\end_inset

 SQL queries in Django to finish the tasks and requirements as defined in
 previous section.
 This is workable due to the module 
\emph on
django.db.connection
\emph default
 which is provided from Django and let users perform more customized queries.
 As in Figure ## shows, between Django and the database engine, we use 
\emph on
django.db.connection
\emph default
 to handle the data trasmission, database update and queries.
 
\end_layout

\begin_layout Standard
As a intermidate level, by using Django, we try to seperate the backend
 (API level) from the frontend (user interface).
 We set a API port 3170 for the backend application, which allows the frontend
 application to send requests to specific URLs and obtain the desired data
 from the database or update the database.
 The URLs are set to 
\begin_inset Quotes eld
\end_inset

http://localhost:3170/api/xxxx
\begin_inset Quotes erd
\end_inset

 where 
\begin_inset Quotes eld
\end_inset

localhost:3170
\begin_inset Quotes erd
\end_inset

 is the 3170 port on the host computer and will be changed to another name
 for production and 
\begin_inset Quotes eld
\end_inset

xxxx
\begin_inset Quotes erd
\end_inset

 is different names for the APIs.
 
\end_layout

\begin_layout Standard
Users of this system can directly access the web pages we provided to register
 new users (making insertions to the database), view the information of
 courses (from the database), posting comments (making insertions to the
 database), etc.
 The webpages are constructed by using a popular web framework Vue.js with
 plugins such as Vuetify and ElementUI to beautify the web pages.
 The frontend application consists of the following web pages:
\end_layout

\begin_layout Itemize
User managment system: user signup page and login page
\end_layout

\begin_layout Itemize
Content display system: course search page and detailed coure information
 page
\end_layout

\begin_layout Itemize
Administration system: administion management page
\end_layout

\begin_layout Standard
The data and http request between the frontend and backend applications
 are achieved by a JavaScript library, 
\emph on
axios
\emph default
, as shown in the above figure.
 
\end_layout

\begin_layout Subsection
User Interface & SQL Function Implementation
\end_layout

\begin_layout Standard
In this section, we will elebrate the details of the implementation between
 the user interface and the SQL functions.
 In the below contents, we will illustrate the user interface with specific
 functions and its corresponding SQL function(s) which defined in the backend
 application.
 
\end_layout

\begin_layout Subsubsection
User Registration
\end_layout

\begin_layout Standard
Below illustrate two figures about the GUI interface of the signup page
 and the login page: 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/signup.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Signup Page
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/login.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Login Page
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In signup page, the user can register a new account whose user name is unique
 from other user names in the database.
 When the user enters this page, the page first sends a request to obtain
 all the user names from the database using the following SQL query command:
 
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "src/getUsers.sql"
lstparams "language=SQL,fontadjust=true,basicstyle={\\ttfamily\\footnotesize\\small},caption={Get User Names}"

\end_inset

Then, in this page, the system will not allow a registerd user to create
 an account again, if he/she uses the same user name.
 The figure below illustrates this situation: 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/username_duplicate.png
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
User Name Duplication
\end_layout

\end_inset


\end_layout

\end_inset

 Meanwhile, the password field of the new account should be non-empty.
 If there is no error, then the signup button will send a request to the
 backend and the following SQL command will be executed:
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "src/registerUser.sql"
lstparams "language=SQL,fontadjust=true,basicstyle={\\ttfamily\\footnotesize\\small},caption={Register a User}"

\end_inset


\end_layout

\begin_layout Standard
When the user enters the login page, inputs his/her user name and password,
 and clicks the login button, then the backend application will perform
 the following SQL query to get the corresponding user in the database:
 
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "src/loginUser.sql"
lstparams "language=SQL,fontadjust=true,basicstyle={\\ttfamily\\footnotesize\\small},caption={Check a User}"

\end_inset

If the result is valid, the user will enter another page.
 Otherwise, the login process fails and a warning bar will show up at the
 bottom of the page.
 
\end_layout

\begin_layout Subsubsection
Course Display
\end_layout

\begin_layout Standard
Below illustrate the one of the two main pages in the frontend application,
 in which the brief information of many courses appear.
 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/courses.png
	lyxscale 30
	scale 15

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Display of Courses
\end_layout

\end_inset


\end_layout

\end_inset

 For each of the course card shown in the above figure, the following types
 of information should be obtained from the database:
\end_layout

\begin_layout Itemize
Course code (name)
\end_layout

\begin_layout Itemize
Average score
\end_layout

\begin_layout Itemize
Number of comment(s)
\end_layout

\begin_layout Itemize
Offering school
\end_layout

\begin_layout Itemize
Credits
\end_layout

\begin_layout Standard
Therefore, we perform the following SQL query to get a table of all the
 courses in the database so that we can get the information needed above:
 
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "src/search.sql"
lstparams "language=SQL,fontadjust=true,basicstyle={\\ttfamily\\footnotesize\\small},caption={List Courses}"

\end_inset

The data then will be transfered via 
\emph on
axios
\emph default
 to the frontend as a list to render.
 ## TODO: search At the bottom of this page, a few recommended courses based
 on the current user status (i.e., commented courses, given scores, etc.) are
 shown as the below figure shows: 
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/recommended.png
	lyxscale 30
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Course Recommendation
\end_layout

\end_inset


\end_layout

\end_inset

 The details of this function will be discussed in the Data Mining section.
 
\end_layout

\begin_layout Standard
The detailed web page of each course after the user clicks the 
\begin_inset Quotes eld
\end_inset

view
\begin_inset Quotes erd
\end_inset

 button at the right-top corner of each course card in the above figure
 is illustrated below: 
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename figures/course_detail.png
	lyxscale 30
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Detailed Course Web Page
\end_layout

\end_inset


\end_layout

\end_inset

 At the right-top corner of the above page, the information of offering
 school, credits, and final score is shown.
 Each of the card in the middle shows the comment information given by some
 user.
 The information of each card includes the following fields: 
\end_layout

\begin_layout Itemize
User name
\end_layout

\begin_layout Itemize
Score given by the user
\end_layout

\begin_layout Itemize
Comment content
\end_layout

\begin_layout Itemize
Number of likes
\end_layout

\begin_layout Itemize
Number of dislikes
\end_layout

\begin_layout Subsubsection
Administration
\end_layout

\begin_layout Standard
As shown in Figure 8, the Admin page 
\end_layout

\begin_layout Section
Results
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
bla bla
\end_layout

\begin_layout Section
\paragraph_spacing single
\noindent
Appendix A
\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "src/CreateTable.sql"
lstparams "language=SQL,fontadjust=true,basicstyle={\\ttfamily\\footnotesize\\tiny},caption={SQLite Table Creation File}"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "ref"
options "ieeetr"

\end_inset


\end_layout

\end_body
\end_document
