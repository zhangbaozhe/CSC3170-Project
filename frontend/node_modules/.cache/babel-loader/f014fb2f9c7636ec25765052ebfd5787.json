{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/LJX/Desktop/vuetify_demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _typeof from \"C:/Users/LJX/Desktop/vuetify_demo/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nvar _excluded = [\"once\"];\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.string.sub.js\";\n\nfunction inserted(el, binding, vnode) {\n  var modifiers = binding.modifiers || {};\n  var value = binding.value;\n  var callback = _typeof(value) === 'object' ? value.handler : value;\n\n  var once = modifiers.once,\n      modifierKeys = _objectWithoutProperties(modifiers, _excluded);\n\n  var hasModifiers = Object.keys(modifierKeys).length > 0; // Options take top priority\n\n  var options = _typeof(value) === 'object' && value.options ? value.options : hasModifiers // If we have modifiers, use only those provided\n  ? {\n    attributes: modifierKeys.attr,\n    childList: modifierKeys.child,\n    subtree: modifierKeys.sub,\n    characterData: modifierKeys.char\n  } // Defaults to everything on\n  : {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n  };\n  var observer = new MutationObserver(function (mutationsList, observer) {\n    /* istanbul ignore if */\n    if (!el._mutate) return; // Just in case, should never fire\n\n    callback(mutationsList, observer); // If has the once modifier, unbind\n\n    once && unbind(el, binding, vnode);\n  });\n  observer.observe(el, options);\n  el._mutate = Object(el._mutate);\n  el._mutate[vnode.context._uid] = {\n    observer: observer\n  };\n}\n\nfunction unbind(el, binding, vnode) {\n  var _el$_mutate;\n\n  if (!((_el$_mutate = el._mutate) != null && _el$_mutate[vnode.context._uid])) return;\n\n  el._mutate[vnode.context._uid].observer.disconnect();\n\n  delete el._mutate[vnode.context._uid];\n}\n\nexport var Mutate = {\n  inserted: inserted,\n  unbind: unbind\n};\nexport default Mutate;","map":{"version":3,"mappings":";;;;;;AAkBA,SAASA,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAmEC,KAAnE,EAA+E;AAC7E,MAAMC,SAAS,GAAGF,OAAO,CAACE,SAAR,IAAqB,EAAvC;AACA,MAAMC,KAAK,GAAGH,OAAO,CAACG,KAAtB;AACA,MAAMC,QAAQ,GAAG,QAAOD,KAAP,MAAiB,QAAjB,GAA4BA,KAAK,CAACE,OAAlC,GAA4CF,KAA7D;;AACA,MAAQG,IAAR,GAAkCJ,SAAlC,CAAQI,IAAR;AAAA,MAAiBC,YAAjB,4BAAkCL,SAAlC;;AACA,MAAMM,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,GAAmC,CAAxD,CAL6E,CAO7E;;AACA,MAAMC,OAAO,GAAG,QAAOT,KAAP,MAAiB,QAAjB,IAA6BA,KAAK,CAACS,OAAnC,GACZT,KAAK,CAACS,OADM,GAEZJ,YAAY,CACZ;AADY,IAEV;AACAK,cAAU,EAAEN,YAAY,CAACO,IADzB;AAEAC,aAAS,EAAER,YAAY,CAACS,KAFxB;AAGAC,WAAO,EAAEV,YAAY,CAACW,GAHtB;AAIAC,iBAAa,EAAEZ,YAAY,CAACa;AAJ5B,GAFU,CAQZ;AARY,IASV;AACAP,cAAU,EAAE,IADZ;AAEAE,aAAS,EAAE,IAFX;AAGAE,WAAO,EAAE,IAHT;AAIAE,iBAAa,EAAE;AAJf,GAXN;AAkBA,MAAME,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,UACpCC,aADoC,EAEpCF,QAFoC,EAGlC;AACF;AACA,QAAI,CAACtB,EAAE,CAACyB,OAAR,EAAiB,OAFf,CAEsB;;AAExBpB,YAAQ,CAACmB,aAAD,EAAgBF,QAAhB,CAAR,CAJE,CAMF;;AACAf,QAAI,IAAImB,MAAM,CAAC1B,EAAD,EAAKC,OAAL,EAAcC,KAAd,CAAd;AAVe,IAAjB;AAaAoB,UAAQ,CAACK,OAAT,CAAiB3B,EAAjB,EAAqBa,OAArB;AACAb,IAAE,CAACyB,OAAH,GAAaf,MAAM,CAACV,EAAE,CAACyB,OAAJ,CAAnB;AACAzB,IAAE,CAACyB,OAAH,CAAYvB,KAAK,CAAC0B,OAAN,CAAeC,IAA3B,IAAmC;AAAEP;AAAF,GAAnC;AACD;;AAED,SAASI,MAAT,CAAiB1B,EAAjB,EAAkCC,OAAlC,EAAiEC,KAAjE,EAA6E;AAAA;;AAC3E,MAAI,iBAACF,EAAE,CAACyB,OAAJ,aAACK,YAAa5B,KAAK,CAAC0B,OAAN,CAAeC,IAA5B,CAAD,CAAJ,EAAwC;;AAExC7B,IAAE,CAACyB,OAAH,CAAWvB,KAAK,CAAC0B,OAAN,CAAeC,IAA1B,EAAiCP,QAAjC,CAA0CS,UAA1C;;AACA,SAAO/B,EAAE,CAACyB,OAAH,CAAWvB,KAAK,CAAC0B,OAAN,CAAeC,IAA1B,CAAP;AACD;;AAED,OAAO,IAAMG,MAAM,GAAG;AACpBjC,UADoB,EACpBA,QADoB;AAEpB2B;AAFoB,CAAf;AAKP,eAAeM,MAAf","names":["inserted","el","binding","vnode","modifiers","value","callback","handler","once","modifierKeys","hasModifiers","Object","keys","length","options","attributes","attr","childList","child","subtree","sub","characterData","char","observer","MutationObserver","mutationsList","_mutate","unbind","observe","context","_uid","_el$_mutate","disconnect","Mutate"],"sourceRoot":"","sources":["../../../src/directives/mutate/index.ts"],"sourcesContent":["import { VNode, VNodeDirective } from 'vue'\n\ntype MutateHandler = (\n  mutationsList: MutationRecord[],\n  observer: MutationObserver,\n) => void\n\ninterface MutateVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value?: MutateHandler | { handler: MutateHandler, options?: MutationObserverInit }\n  modifiers?: {\n    once?: boolean\n    attr?: boolean\n    child?: boolean\n    sub?: boolean\n    char?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: MutateVNodeDirective, vnode: VNode) {\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const callback = typeof value === 'object' ? value.handler : value!\n  const { once, ...modifierKeys } = modifiers\n  const hasModifiers = Object.keys(modifierKeys).length > 0\n\n  // Options take top priority\n  const options = typeof value === 'object' && value.options\n    ? value.options\n    : hasModifiers\n      // If we have modifiers, use only those provided\n      ? {\n        attributes: modifierKeys.attr,\n        childList: modifierKeys.child,\n        subtree: modifierKeys.sub,\n        characterData: modifierKeys.char,\n      }\n      // Defaults to everything on\n      : {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        characterData: true,\n      }\n\n  const observer = new MutationObserver((\n    mutationsList: MutationRecord[],\n    observer: MutationObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._mutate) return // Just in case, should never fire\n\n    callback(mutationsList, observer)\n\n    // If has the once modifier, unbind\n    once && unbind(el, binding, vnode)\n  })\n\n  observer.observe(el, options)\n  el._mutate = Object(el._mutate)\n  el._mutate![vnode.context!._uid] = { observer }\n}\n\nfunction unbind (el: HTMLElement, binding: MutateVNodeDirective, vnode: VNode) {\n  if (!el._mutate?.[vnode.context!._uid]) return\n\n  el._mutate[vnode.context!._uid]!.observer.disconnect()\n  delete el._mutate[vnode.context!._uid]\n}\n\nexport const Mutate = {\n  inserted,\n  unbind,\n}\n\nexport default Mutate\n"]},"metadata":{},"sourceType":"module"}